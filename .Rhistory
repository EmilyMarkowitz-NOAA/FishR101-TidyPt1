######***Libraries#########
library(here)
here("scripts","Lesson.Rmd")
#' ---
#' title: FishR101 - Jan-Feb 2021
#' purpose: run all of the scripts and R markdown scripts
#' author: emily.markowitz AT noaa.gov
#' start date: 2020-10
#' ---
######START#######
# Always start with a clean state by removing everything in your environment!
######***Libraries#########
library(here)
#######***LOAD PROJECT LIBRARIES AND FUNCTIONS#############
#Functions specific to this section
# source("./scripts/functions.R")
#######***LOAD PROJECT Data#############
#Data specific to this section
# source(paste0(dir.scripts, "/dataDownload.r"))
# source("./scripts/data.R")
######MAKE OUTPUTS########
rmarkdown::render(here("scripts","Lesson.Rmd"),
output_dir = here("lesson"),
output_file = "Lesson.pdf")
rmarkdown::render(here("scripts","Homework.Rmd"),
output_dir = here("lesson"),
output_file = "Lesson.pdf")
rmarkdown::render(here("scripts","Homework-Answers.Rmd"),
output_dir = here("lesson"),
output_file = "Homework.pdf")
rmarkdown::render(here("scripts","presentation.Rmd"),
output_dir = here("lesson"),
output_file = "Presentation.html")
rmarkdown::render(here("scripts","presentation.Rpres"),
output_dir = here("lesson"),
output_file = "Presentation.html")
#' ---
#' title: FishR101 - Jan-Feb 2021
#' purpose: run all of the scripts and R markdown scripts
#' author: emily.markowitz AT noaa.gov
#' start date: 2020-10
#' ---
######START#######
# Always start with a clean state by removing everything in your environment!
######***Libraries#########
library(here)
#######***LOAD PROJECT LIBRARIES AND FUNCTIONS#############
#Functions specific to this section
# source("./scripts/functions.R")
#######***LOAD PROJECT Data#############
#Data specific to this section
# source(paste0(dir.scripts, "/dataDownload.r"))
# source("./scripts/data.R")
######MAKE OUTPUTS########
rmarkdown::render(here("scripts","Lesson.Rmd"),
output_dir = here("lesson"),
output_file = "Lesson.pdf")
rmarkdown::render(here("scripts","Homework.Rmd"),
output_dir = here("lesson"),
output_file = "Homework.pdf")
rmarkdown::render(here("scripts","Homework-Answers.Rmd"),
output_dir = here("lesson"),
output_file = "Homework-Answers.pdf")
rmarkdown::render(here("scripts","presentation.Rpres"),
output_dir = here("lesson"),
output_file = "Presentation.html")
library(tidyverse)
library(here)
library(lubridate)
here() # this is where you are
# navigate to sub-folders:
here("code") # go into the 'code' folder
here("data") # go into the 'data' folder
# base R:
ebs_csv_base <- read.csv(file = here("data", "ebs_2017-2018.csv"))
ebs_csv_base
whales_txt_base <- read.table(file = here("data", "GRAY.TXT"))
whales_txt_base
# tidy R:
ebs_csv_tidy <- read_csv(file = here("data", "ebs_2017-2018.csv"))
ebs_csv_tidy
whales_tab_tidy <- read_table(file = here("data", "GRAY.TXT"))
whales_tab_tidy # didn't work the way we expected...
# # try this instead (note '\t' means there is a tab separating columns)
whales_delim_tidy <- read_delim(file = here("data", "GRAY.TXT"),
delim = "\t", col_names = FALSE)
whales_delim_tidy
# if the .csv is available online:
# data <- read.csv(url("http://some.where.net/data/foo.csv"))
# or, the tidy way:
plastics <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-01-26/plastics.csv')
plastics
git_data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
git_data
git_data_tidy <- read_table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv")
git_data_tidy
git_data_tidy2 <- read_delim("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", delim = "-")
git_data_tidy2
# * extra header lines ----------------------------------------------------
# # use the 'skip' feature
ebs_header <- read_csv(file = here("data", "ebs_2017-2018_headers.csv"))
ebs_header
# take a look at the first row... that's not right...
ebs_header2 <- read_csv(file = here("data", "ebs_2017-2018_headers.csv"),
skip = 2, col_names = FALSE)
ebs_header2
# now we need column names
ebs_header_names <- names(read_csv(file = here("data", "ebs_2017-2018_headers.csv"),
n_max = 0))
ebs_header3 <- read_csv(file = here("data", "ebs_2017-2018_headers.csv"),
skip = 2, col_names = ebs_header_names)
ebs_header3
ebs_header3
# but... a few column types are not correct. Let's fix that:
ebs_header4 <- read_csv(file = here("data", "ebs_2017-2018_headers.csv"),
skip = 2, col_names = ebs_header_names,
col_types = cols(
"LATITUDE" = col_double(),
"LONGITUDE" = col_double(),
"STATION" = col_character(),
"STRATUM" = col_double(),
"YEAR"    = col_double(),
"DATETIME" = col_guess(),
"WTCPUE"  = col_double(),
"NUMCPUE" = col_double(),
"COMMON"  = col_character(),
"SCIENTIFIC" = col_character(),
"SID"     = col_double(),
"BOT_DEPTH"= col_double(),
"BOT_TEMP" = col_double(),
"SURF_TEMP"= col_double(),
"VESSEL"   = col_double(),
"CRUISE"   = col_double(),
"HAUL"     = col_double()
))
ebs_header4
# install.packages('magrittr')
library(magrittr) # this package contains the function: %<>%
#   %<>% means: assign a change to the object on the left
ebs_header3
ebs_header3$DATETIME %<>% mdy_hm
ebs_header3
write.csv(x = whales_txt_base, file = here("output", "whales.csv"))
write_csv(x = whales_txt_base, path = here("output", "whales_readr.csv"))
write.csv(x = whales_txt_base, file = here("output", "whales.csv"))
write_csv(x = whales_txt_base, path = here("output", "whales_readr.csv"))
write_file(x = "save my stuff", path = here("output", "save_text.txt"))
string_vector <- c("fish", "whale", "invert", "epipelagic", "benthic")
write_lines(x = string_vector, path = here("output", "save_lines.txt"))
write_lines(x = as.list(string_vector), path = here("output", "save_lines2.txt"))
# the sink() function
save_to <- here("output", "my_first_sink.txt") # designate the output folder and name your output
sink(save_to)    # open or start your sink, and give it the save location and name
for (i in 1:20){ # print 20 numbers to your text file
print(i)
}
sink()           # close the sink
# complex/mixed output:
save_model_info <- list("data" = whales_txt_base,
"model" = "population dynamics",
"recruitment" = 0.05,
"mortality" = 0.04)
save_whale_model <- here("output", "whale_model.txt")
sink(save_whale_model)
print(save_model_info)
sink() # ALWAYS close your sink at the end!
# packages ----------------------------------------------------------------
library(tidyverse)
# 1) read-in:
#     a) use the error message to determine what the two columns should be
#     b) correct the column types accordingly
#     HINT: use View(challenge) or tail(challenge) to see more of column y
challenge <- read_csv(readr_example("challenge.csv"))
# 1) read-in:
#     a) use the error message to determine what the two columns should be
#     b) correct the column types accordingly
#     HINT: use View(challenge) or tail(challenge) to see more of column y
challenge <- read_csv(readr_example("challenge.csv"))
challenge
fish_names <- c("Nemo", "Bubbles", "Jack", "Captain", "Finley",
"Goldie", "Dory", "Ariel", "Angel", "Minnie")
name_rank <- rep(1:5, times = 2)
# 3) find a data set you've worked with and pull it into R
# 3) find a data set you've worked with and pull it into R
#     a) fix any problems with column designation, and
# 3) find a data set you've worked with and pull it into R
#     a) fix any problems with column designation, and
#     b) clean up the column names (Hint: remember lecture 2)
# 3) find a data set you've worked with and pull it into R
#     a) fix any problems with column designation, and
#     b) clean up the column names (Hint: remember lecture 2)
# packages ----------------------------------------------------------------
library(tidyverse)
# 1) read-in:
#     see if you can use the error message to determine what the two columns should be
#     correct the column types accordingly
#     HINT: use View(challenge) or tail(challenge) to see more of column y
challenge <- read_csv(readr_example("challenge.csv"))
challenge
tail(challenge)
challenge <- read_csv(
readr_example("challenge.csv"),
col_types = cols(
x = col_double(),
y = col_date()
)
)
challenge
tail(challenge)
fish_names <- c("Nemo", "Bubbles", "Jack", "Captain", "Finley",
"Goldie", "Dory", "Ariel", "Angel", "Minnie")
name_rank <- rep(1:5, times = 2)
save_stuff <- list("challenge" = challenge,
"names" = fish_names,
"rank" = name_rank)
save_dir <- here('output', "saving_stuff.txt")
sink(save_dir)
save_stuff
sink()
# 3) find a data set you've worked with and pull it into R
# 3) find a data set you've worked with and pull it into R
#     a) fix any problems with column designation, and
# 3) find a data set you've worked with and pull it into R
#     a) fix any problems with column designation, and
#     b) clean up the column names (Hint: remember lecture 2)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE,
error = FALSE, message = FALSE,
tinytex.verbose = TRUE)
library(knitr)
save_stuff <- list("challenge" = challenge,
"names" = fish_names,
"rank" = name_rank)
save_dir <- here('output', "saving_stuff.txt")
sink(save_dir)
save_stuff
sink()
#' ---
#' title: FishR101 - Jan-Feb 2021
#' purpose: run all of the scripts and R markdown scripts
#' author: emily.markowitz AT noaa.gov
#' start date: 2020-10
#' ---
######START#######
# Always start with a clean state by removing everything in your environment!
######***Libraries#########
library(here)
#######***LOAD PROJECT LIBRARIES AND FUNCTIONS#############
#Functions specific to this section
# source("./scripts/functions.R")
#######***LOAD PROJECT Data#############
#Data specific to this section
# source(paste0(dir.scripts, "/dataDownload.r"))
# source("./scripts/data.R")
######MAKE OUTPUTS########
echoTF<-FALSE
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework"
rmarkdown::render(here("code","homework_solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework.pdf")
echoTF<-TRUE
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework Answers"
rmarkdown::render(here("code","homework_solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework-answers.pdf")
######***Libraries#########
library(here)
echoTF<-FALSE
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework"
rmarkdown::render(here("code","homework_solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework.pdf")
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework"
rmarkdown::render(here("code","homework-solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework.pdf")
rmarkdown::render(here("code","homework-solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework.pdf")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE,
error = FALSE, message = FALSE,
tinytex.verbose = TRUE)
library(knitr)
library(tidyverse)
challenge <- read_csv(readr_example("challenge.csv"))
challenge
rmarkdown::render(here("code","homework-solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework.pdf")
echoTF<-TRUE
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework Answers"
rmarkdown::render(here("code","homework-solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework-answers.pdf")
challenge <- read_csv(readr_example("challenge.csv"))
head(challenge)
tail(challenge)
challenge <- read_csv(readr_example("challenge.csv"))
head(challenge)
tail(challenge)
######***Libraries#########
library(here)
#######***LOAD PROJECT LIBRARIES AND FUNCTIONS#############
#Functions specific to this section
# source("./scripts/functions.R")
#######***LOAD PROJECT Data#############
#Data specific to this section
# source(paste0(dir.scripts, "/dataDownload.r"))
# source("./scripts/data.R")
######MAKE OUTPUTS########
echoTF<-FALSE
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework"
rmarkdown::render(here("code","homework-solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework.pdf")
echoTF<-FALSE
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework"
rmarkdown::render(here("code","homework-solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework3.pdf")
echoTF<-TRUE
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework Answers"
rmarkdown::render(here("code","homework-solutions.Rmd"),
output_dir = here("code"),
output_file = "homework3_solutions.pdf")
#' ---
#' title: FishR101 - Jan-Feb 2021
#' purpose: run all of the scripts and R markdown scripts
#' author: emily.markowitz AT noaa.gov
#' start date: 2020-10
#' ---
######START#######
# Always start with a clean state by removing everything in your environment!
######***Libraries#########
library(here)
#######***LOAD PROJECT LIBRARIES AND FUNCTIONS#############
#Functions specific to this section
# source("./scripts/functions.R")
#######***LOAD PROJECT Data#############
#Data specific to this section
# source(paste0(dir.scripts, "/dataDownload.r"))
# source("./scripts/data.R")
######MAKE OUTPUTS########
echoTF<-FALSE
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework"
rmarkdown::render(here("code","homework-solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework3.pdf")
echoTF<-TRUE
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework Answers"
rmarkdown::render(here("code","homework-solutions.Rmd"),
output_dir = here("code"),
output_file = "homework3_solutions.pdf")
#' ---
#' title: FishR101 - Jan-Feb 2021
#' purpose: run all of the scripts and R markdown scripts
#' author: emily.markowitz AT noaa.gov
#' start date: 2020-10
#' ---
######START#######
# Always start with a clean state by removing everything in your environment!
######***Libraries#########
library(here)
#######***LOAD PROJECT LIBRARIES AND FUNCTIONS#############
#Functions specific to this section
# source("./scripts/functions.R")
#######***LOAD PROJECT Data#############
#Data specific to this section
# source(paste0(dir.scripts, "/dataDownload.r"))
# source("./scripts/data.R")
######MAKE OUTPUTS########
echoTF<-FALSE
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework"
rmarkdown::render(here("code","homework-solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework3.pdf")
echoTF<-TRUE
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework Answers"
rmarkdown::render(here("code","homework-solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework3_solutions.pdf")
echoTF<-FALSE
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework"
rmarkdown::render(here("code","homework-solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework3.pdf")
echoTF<-TRUE
title0<-"Lesson 3: Dive into Tidy: Data Wrangling and Manipulation Part I - Homework Answers"
rmarkdown::render(here("code","homework-solutions.Rmd"),
output_dir = here("code"),
output_file = "4_homework3_solutions.pdf")
